#!/bin/bash

# login based on https://www.mediawiki.org/wiki/API:Client_code/Bash

read user password < auth
if [ -z "$user" -o -z "$password" ]; then
    echo "$0: error: no authentication data found in \`auth\` file" >&2
    exit 1
fi
api='http://www.wikidata.org/w/api.php'
cookie_jar="cookies"
user_agent="$user Patroller Bot Development"

get() {
    curl -s -S \
         --location \
         --cookie $cookie_jar \
         --cookie-jar $cookie_jar \
         --user-agent "$user_agent" \
         --keepalive-time 60 \
         --header "Accept-Language: en-us" \
         --header "Connection: keep-alive" \
         --compressed \
         --data-urlencode "format=json" \
         "$@" \
         "$api"
}

#Login part 1
CR=$(get \
         --data-urlencode "action=login" \
         --data-urlencode "lgname=${user}" \
         --data-urlencode "lgpassword=${password}" \
         --request "POST")

TOKEN=$(echo "$CR" | jq --raw-output .login.token)
if [ -z "$TOKEN" ]; then
    echo "Login part 1 failed."
    echo $CR
    exit 1
fi

#Login part 2
CR=$(get \
         --data-urlencode "action=login" \
         --data-urlencode "lgname=${user}" \
         --data-urlencode "lgpassword=${password}" \
         --data-urlencode "lgtoken=${TOKEN}" \
         --request "POST")

changes() {
    get \
        --data-urlencode "action=query" \
        --data-urlencode "list=recentchanges" \
        --data-urlencode "rcshow=!patrolled" \
        --data-urlencode "rcnamespace=0" \
        --data-urlencode "rcprop=ids|comment" \
        --data-urlencode "rclimit=50"
}

# input: literal start of comments
# output: those revisions matching that start, in the format:
# revid comment
# 212664081 /* clientsitelink-update:0|Xwiki|Xwiki:FOO|Xwiki:BAR */
filterchanges() {
    changes | jq --raw-output '
        .query.recentchanges |
        map(select(.comment | startswith("'"$1"'"))) |
        map((.revid | tostring) + " " + .comment) |
        .[]'
}

pagemoves() {
    filterchanges "/* clientsitelink-update:0|"
}
pageremoves() {
    filterchanges "/* clientsitelink-remove:1|| */ "
}

apiurl() {
    if [[ "$1" =~ wiki$ ]]; then
        echo "https://${1%wiki}.wikipedia.org/w/api.php"
    else
        return 1
    fi
    # TODO: wikisource, wikivoyage, wikibooks, wikiquote, etc.
}

pagemoves | while read revid comment; do
    wikicode="$(sed 's#^/\* clientsitelink-update:0|\([^|]*\)|.*$#\1#' <<< "$comment")" || continue
    apiurl=$(apiurl "$wikicode") || continue
    # evil sed hackery to make `s` fail if it doesnâ€™t match:
    # t branches to LABEL iff the last `s` matched; q quits with code X; : defines LABEL.
    oldpage="$(sed 's#^/\* clientsitelink-update:0|\([^|]*\)|\1:\([^|]*\)|\1:\(.*\) \*/$#\2#; t ok; q 1; : ok' <<< "$comment")" || continue
    newpage="$(sed 's#^/\* clientsitelink-update:0|\([^|]*\)|\1:\([^|]*\)|\1:\(.*\) \*/$#\3#; t ok; q 1; : ok' <<< "$comment")" || continue
done

pageremoves
